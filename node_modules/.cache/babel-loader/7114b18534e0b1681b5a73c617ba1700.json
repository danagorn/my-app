{"ast":null,"code":"import _defineProperty from \"/home/daniel/iweb/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/daniel/iweb/my-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { changeQuestion, questionAnswer, submit, initQuestions, reset, selectQuestion } from './redux/actions';\nimport Game from \"./Game\";\nimport Results from \"./Results\";\nimport Navbar from \"./Navbar\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    this.fetching = () => {\n      fetch('https://quiz.dit.upm.es/api/quizzes/random10wa?token=25c18cae239a329347de').then(data => data.json()).then(questions => this.props.dispatch(initQuestions(questions))).catch(error => console.log(error));\n    };\n\n    this.changeApply = act => {\n      this.props.dispatch(changeQuestion(this.props.currentQuestion, act, this.props.questions.length - 1));\n    };\n\n    this.inputChange = answer => {\n      this.props.dispatch(questionAnswer(this.props.currentQuestion, answer));\n    };\n\n    this.submitChange = () => {\n      this.props.dispatch(submit(this.props.questions));\n    };\n\n    this.loadNewData = () => {\n      this.fetching();\n      this.props.dispatch(submit(this.props.questions));\n    };\n\n    this.resetSameQuestions = () => {\n      this.props.dispatch(reset(this.props.questions));\n    };\n\n    this.resetNewQuestions = () => {\n      this.fetching();\n      this.props.dispatch(reset(this.props.questions));\n    };\n\n    this.selectNewQuestion = target => {\n      this.props.dispatch(selectQuestion(target));\n    };\n  }\n\n  componentDidMount() {\n    this.fetching();\n  }\n\n  render() {\n    if (this.props.questions.length != 0) {\n      if (!this.props.finished) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          score: this.props.score,\n          resetSameQuestions: this.resetSameQuestions,\n          resetNewQuestions: this.resetNewQuestions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(Game, {\n          question: this.props.questions[this.props.currentQuestion],\n          change: this.changeApply,\n          inputChange: this.inputChange,\n          submit: this.submitChange,\n          currentQuestion: this.props.currentQuestion,\n          questions: this.props.questions,\n          selectNewQuestion: this.selectNewQuestion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Results, {\n          score: this.props.score,\n          submit: this.submitChange,\n          loadNewData: this.loadNewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      }\n    } else {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"No hay preguntas disponibles en este momento\");\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state);\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/daniel/iweb/my-app/src/App.js"],"names":["React","Component","connect","changeQuestion","questionAnswer","submit","initQuestions","reset","selectQuestion","Game","Results","Navbar","App","constructor","props","fetching","fetch","then","data","json","questions","dispatch","catch","error","console","log","changeApply","act","currentQuestion","length","inputChange","answer","submitChange","loadNewData","resetSameQuestions","resetNewQuestions","selectNewQuestion","target","componentDidMount","render","finished","score","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { changeQuestion, questionAnswer, submit, initQuestions, reset, selectQuestion } from './redux/actions'\nimport Game from \"./Game\";\nimport Results from \"./Results\";\nimport Navbar from \"./Navbar\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super();\n  }\n\ncomponentDidMount() {\n  this.fetching();\n\n}\n\nfetching = () =>{\nfetch('https://quiz.dit.upm.es/api/quizzes/random10wa?token=25c18cae239a329347de')\n.then((data) => data.json())\n.then((questions) => this.props.dispatch(initQuestions(questions)))\n.catch((error) => console.log(error))\n}\n\nchangeApply = (act) => {\n  this.props.dispatch(changeQuestion(this.props.currentQuestion, act, this.props.questions.length -1));\n}\n\ninputChange = (answer) => {\n  this.props.dispatch(questionAnswer(this.props.currentQuestion, answer));\n}\n\nsubmitChange = () => {\n  this.props.dispatch(submit(this.props.questions));\n}\n\nloadNewData = () =>{\n  this.fetching();\n  this.props.dispatch(submit(this.props.questions));\n}\n\nresetSameQuestions = () =>{\n  this.props.dispatch(reset(this.props.questions));\n}\n\nresetNewQuestions = () =>{\n  this.fetching();\n  this.props.dispatch(reset(this.props.questions));\n}\n\nselectNewQuestion = (target) =>{\n  this.props.dispatch(selectQuestion(target));\n}\n\n\nrender() {\n\n  if (this.props.questions.length != 0){\n\n    if(!this.props.finished){\n      return (\n        <div>\n        <Navbar score={this.props.score} resetSameQuestions={this.resetSameQuestions} resetNewQuestions={this.resetNewQuestions}/>\n        <Game question={this.props.questions[this.props.currentQuestion]}\n        change={this.changeApply}\n        inputChange={this.inputChange}\n        submit={this.submitChange}\n        currentQuestion={this.props.currentQuestion}\n        questions={this.props.questions}\n        selectNewQuestion={this.selectNewQuestion}\n        />\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n        <Results score={this.props.score} submit={this.submitChange} loadNewData={this.loadNewData}/>\n        </div>)\n      }\n\n    } else {\n      return (\n        <span>No hay preguntas disponibles en este momento</span>\n      )\n    }\n\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}