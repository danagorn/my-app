{"ast":null,"code":"import _defineProperty from \"/home/daniel/iweb/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { QUESTION_ANSWER, CHANGE_QUESTION, SUBMIT, INIT_QUESTIONS, RESET, SELECT_QUESTION } from './actions';\n\nfunction score(state = 0, action = {}) {\n  switch (action.type) {\n    case SUBMIT:\n      state = 0;\n      action.payload.questions.map((elemento, i) => {\n        if (elemento.answer === elemento.userAnswer) {\n          return state++;\n        }\n      });\n      console.log(score);\n\n    default:\n      return state;\n  }\n}\n\nfunction finished(state = false, action = {}) {\n  switch (action.type) {\n    case SUBMIT:\n      return state ? false : true;\n\n    default:\n      return state;\n  }\n}\n\nfunction currentQuestion(state = 0, action = {}) {\n  switch (action.type) {\n    case CHANGE_QUESTION:\n      if (action.payload.act === 0) {\n        if (action.payload.index === 0) {\n          return state;\n        } else {\n          return state - 1;\n        }\n      } else {\n        if (action.payload.index === action.payload.length) {\n          return state;\n        } else {\n          return state + 1;\n        }\n      }\n\n    case SUBMIT:\n      return 0;\n\n    case RESET:\n      return 0;\n\n    case SELECT_QUESTION:\n      return action.payload.target;\n\n    default:\n      return state;\n  }\n}\n\nfunction questions(state = [], action = {}) {\n  switch (action.type) {\n    case QUESTION_ANSWER:\n      return state.map((question, i) => {\n        return _objectSpread({}, question, {\n          userAnswer: action.payload.index === i ? action.payload.answer : question.userAnswer\n        });\n      });\n\n    case SUBMIT:\n      return state.map((question, i) => {\n        return _objectSpread({}, question, {\n          userAnswer: ''\n        });\n      });\n\n    case RESET:\n      return state.map((question, i) => {\n        return _objectSpread({}, question, {\n          userAnswer: ''\n        });\n      });\n\n    case INIT_QUESTIONS:\n      return action.payload.questions;\n\n    default:\n      return state;\n  }\n}\n\nconst GlobalState = combineReducers({\n  score: score,\n  finished: finished,\n  currentQuestion: currentQuestion,\n  questions: questions\n});\nexport default GlobalState;","map":{"version":3,"sources":["/home/daniel/iweb/my-app/src/redux/reducers.js"],"names":["combineReducers","QUESTION_ANSWER","CHANGE_QUESTION","SUBMIT","INIT_QUESTIONS","RESET","SELECT_QUESTION","score","state","action","type","payload","questions","map","elemento","i","answer","userAnswer","console","log","finished","currentQuestion","act","index","length","target","question","GlobalState"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { QUESTION_ANSWER, CHANGE_QUESTION, SUBMIT, INIT_QUESTIONS, RESET, SELECT_QUESTION } from './actions'\n\nfunction score(state = 0, action = {}) {\n  switch(action.type) {\n    case SUBMIT:\n    state = 0;\n    action.payload.questions.map((elemento,i)=>{\n      if(elemento.answer === elemento.userAnswer){\n        return state++;\n      }\n    })\n    console.log(score);\n    default:\n    return state;\n  }\n}\nfunction finished(state = false, action = {}) {\n  switch(action.type) {\n    case SUBMIT:\n    return state ? false : true;\n    default:\n    return state;\n  }\n}\nfunction currentQuestion(state = 0, action = {}) {\n  switch(action.type) {\n    case CHANGE_QUESTION:\n    if (action.payload.act === 0)\n    if(action.payload.index === 0){\n      return state;\n    }else{\n      return state - 1;\n    }\n    else {\n      if(action.payload.index === action.payload.length){\n        return state;\n      }else{\n        return state +1;\n      }\n    }\n    case SUBMIT:\n      return 0;\n    case RESET:\n      return 0;\n    case SELECT_QUESTION:\n      return action.payload.target;\n    default:\n    return state;\n  }\n}\nfunction questions(state = [], action = {}) {\n  switch(action.type) {\n    case QUESTION_ANSWER:\n    return state.map((question,i) => {\n      return { ...question,\n        userAnswer: action.payload.index === i ?\n        action.payload.answer : question.userAnswer}\n      })\n      case SUBMIT:\n        return state.map((question,i) => {\n          return { ...question,\n            userAnswer: '' }\n          })\n      case RESET:\n        return state.map((question,i) => {\n          return { ...question,\n            userAnswer: '' }\n          })\n      case INIT_QUESTIONS:\n        return action.payload.questions;\n      default:\n        return state;\n      }\n    }\n\n    const GlobalState = (combineReducers({\n      score: score,\n      finished: finished,\n      currentQuestion: currentQuestion,\n      questions: questions\n    }));\n    export default GlobalState;\n"]},"metadata":{},"sourceType":"module"}